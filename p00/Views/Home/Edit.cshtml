@model p00.Models.TopicEV
@using WebApplication2.Models;
@{
    ViewBag.Title = "تقيم";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}




@using (Html.BeginForm("Edit", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    var db = new ApplicationDbContext();
    var document = db.Documents.Where(a => a.TopicEVId == Model.Id);


    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.EvaluationFormId)
    @Html.HiddenFor(model => model.SectionsId)
    @Html.HiddenFor(model => model.TopicsId)
    @Html.HiddenFor(model => model.TeacherId)
    <div class="col-md-12">
        <div class="card card-default">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-pen-nib"></i>
                    تقييم الفقرة
                </h3>
            </div>

            <div class="card-body">
                <div class="callout callout-warning">

                    <h5> @Html.LabelFor(model => model.EvaluationFormId, "تاريخ الاستماره", htmlAttributes: new { @class = "control-label col-md-2" })</h5>


                    <p> @Model.EvaluationForm.year</p>


                </div>
                <div class="callout callout-warning">

                    <h5>    @Html.LabelFor(model => model.SectionsId, "المحور", htmlAttributes: new { @class = "control-label col-md-2" })</h5>


                    <p>  @Model.Sections.SectionName</p>


                </div>
                <div class="callout callout-warning">

                    <h5>
                        @Html.LabelFor(model => model.TopicsId, "الفقره", htmlAttributes: new { @class = "control-label col-md-2" })

                    </h5>


                    <p>    @Model.Topics.TopicName</p>


                </div>
                <div class="callout callout-warning">

                    <h5>
                        @Html.LabelFor(model => model.TeacherId, "اسم الاستاذ", htmlAttributes: new { @class = "control-label col-md-2" })


                    </h5>


                    <p>@Model.Teacher.FullName</p>


                </div>
                @if (document.Count() > 0)
                {
                    <div class="col-12">
                        <div class="card card-warning">
                            <div class="card-header">
                                <div class="card-title">
                                    الوثائق الخاصة بالفقرة
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    @foreach (var itme in document)
                                    {



                                        <div class="col-sm-2">
                                            <a href="~/Uploads/@itme.Name" data-toggle="lightbox" data-title="@itme.Name" data-gallery="gallery">
                                                <img src="~/Uploads/@itme.Name" class="img-fluid mb-2" alt="وثيقة" />
                                            </a>

                                        </div>



                                    }
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    if (Model.Topics.ReqDoc == true)
                    {
                        <div class="form-group">
                            @Html.Label("وثيقه", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <h4>هذا الفقره تحتاج لوثيقه ولم يتم رفعها.. لايمكنك التقييم  </h4>
                            </div>
                        </div>

                    }
                }
                @if (document.Count() > 0)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Points, "الدرجة", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @{
                                var max = Model.Topics.TotalPoints;

                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.Points, new
                               {
                                   htmlAttributes = new
                                   {
                                       type = "range",
                                            min = "1",
                                            max = max,
                                            onChange = "rangeSlide(this.value)"
                                   }
                               })
                                    <span id="rangevalue">0</span>


                                </div>

                                @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
                                <h3></h3>
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*@Html.ActionLink("موافقه", "Assent", new { id = true }, new { @class = "btn btn-default" })
                    @Html.ActionLink("رفض", "Assent", new { id = false }, new { @class = "btn btn-default" })*@

                            <input type="submit" value="موافقه" name="submitButton" class="btn btn-outline-success" />
                            <input type="submit" value="رفض" name="submitButton" class="btn btn-outline-danger" />
                        
                        </div>
                    </div>
                                }
                </div>
                              
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>






                                }

<div class="jumbotron">
    @Html.ActionLink("الرجوع الى القائمة", "Assent", new { @class = "btn btn-primary" })
</div>
<style>
    respon {
        width: 100%;
        max-width: 400px;
        height: auto;
    }
</style>
